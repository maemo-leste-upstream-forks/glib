GNOME #593406
CVE-2009-3289
Commits:
 e695c0932f5d02f3b222f0b7a3de1f8c00ba7b81
 bb7852e34b1845e516290e1b45a960a345ee8a43
 48e0af0157f52ac12b904bd92540432a18b139c7
Index: glib-2.16.6/gio/glocalfileinfo.c
===================================================================
--- glib-2.16.6.orig/gio/glocalfileinfo.c	2009-11-14 16:11:15.034730393 +0100
+++ glib-2.16.6/gio/glocalfileinfo.c	2009-11-14 16:12:20.654726351 +0100
@@ -1707,15 +1707,36 @@ get_byte_string (const GFileAttributeVal
 
 static gboolean
 set_unix_mode (char                       *filename,
+               GFileQueryInfoFlags         flags,
 	       const GFileAttributeValue  *value,
 	       GError                    **error)
 {
   guint32 val;
+  int res = 0;
   
   if (!get_uint32 (value, &val, error))
     return FALSE;
-  
-  if (g_chmod (filename, val) == -1)
+
+#ifdef HAVE_SYMLINK
+  if (flags & G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS) {
+    struct stat statbuf;
+    /* Calling chmod on a symlink changes permissions on the symlink.
+     * We don't want to do this, so we need to check for a symlink */
+    res = g_lstat (filename, &statbuf);
+    if (res == 0 && S_ISLNK (statbuf.st_mode))
+      {
+        g_set_error_literal (error, G_IO_ERROR,
+                             G_IO_ERROR_NOT_SUPPORTED,
+                             _("Cannot set permissions on symlinks"));
+        return FALSE;
+      }
+  }
+#endif
+
+  if (res == 0)
+    res = g_chmod (filename, val);
+
+  if (res == -1)
     {
       int errsv = errno;
 
@@ -1962,7 +1983,7 @@ _g_local_file_info_set_attribute (char  
   _g_file_attribute_value_set_from_pointer (&value, type, value_p, FALSE);
   
   if (strcmp (attribute, G_FILE_ATTRIBUTE_UNIX_MODE) == 0)
-    return set_unix_mode (filename, &value, error);
+    return set_unix_mode (filename, flags, &value, error);
   
 #ifdef HAVE_CHOWN
   else if (strcmp (attribute, G_FILE_ATTRIBUTE_UNIX_UID) == 0)
@@ -2063,7 +2084,7 @@ _g_local_file_info_set_attributes  (char
   value = _g_file_info_get_attribute_value (info, G_FILE_ATTRIBUTE_UNIX_MODE);
   if (value)
     {
-      if (!set_unix_mode (filename, value, error))
+      if (!set_unix_mode (filename, flags, value, error))
 	{
 	  value->status = G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING;
 	  res = FALSE;
